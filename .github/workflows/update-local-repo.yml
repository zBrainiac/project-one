name: Update Local Repository and Run Sonar Scanner

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  update-and-scan:
    runs-on: self-hosted
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      PROJECT_KEY: ${{ github.event.repository.name }}
      RELEASE_NUM: ${{ github.run_number }}
      SONAR_BRANCH_NAME: ${{ github.ref_name }}
      SONAR_HOST: http://localhost:9000
      BASE_DIR: /Users/mdaeppen/workspace/Mother-of-all-Projects
      SOURCE_DATABASE: MD_TEST
      SOURCE_SCHEMA: IOT_REF_20250711
      CLONE_DATABASE: MD_TEST
      CLONE_SCHEMA: IOT_CLONE

    steps:
      - name: üìõ Show repo info
        run: |
          echo "üì¶ Project: $PROJECT_KEY"
          echo "üîÄ Branch: $SONAR_BRANCH_NAME"
          echo "üìå Release #: $RELEASE_NUM"

      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This ensures a full clone, avoiding shallow clone issues

      - name: üîÑ Pull latest changes
        run: git pull

      - name: üß™ Run Sonar Scanner
        run: |
          bash "$BASE_DIR/local-github-process/sonar-scanner_v1.sh"

      - name: ‚úÖ Wait for Quality Gate to complete
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        with:
          scanMetadataReportFile: '.scannerwork/report-task.txt'

      - name: ‚ùÑÔ∏è Run Snowflake Schema Cloning
        run: |
          bash "$BASE_DIR/local-github-process/snowflake-clone-db_v1.sh" \
          --SOURCE_DATABASE=$SOURCE_DATABASE \
          --SOURCE_SCHEMA=$SOURCE_SCHEMA \
          --CLONE_DATABASE=$CLONE_DATABASE \
          --CLONE_SCHEMA=$CLONE_SCHEMA \
          --RELEASE_NUM=$RELEASE_NUM

      - name: üöß Dummy Deploy Step
        run: |
          echo "üöÄ Deploying schema $CLONE_SCHEMA with release $RELEASE_NUM to Snowflake..."
          sleep 2
          echo "‚úÖ Dummy deployment complete!"

      - name: üèóÔ∏è Run Snowflake Deploy Structure
        run: |
          bash "$BASE_DIR/local-github-process/snowflake-deploy-structure_v1.sh" \
          --PROJECT_KEY=$PROJECT_KEY \
          --CLONE_DATABASE=$CLONE_DATABASE \
          --CLONE_SCHEMA=$CLONE_SCHEMA \
          --RELEASE_NUM=$RELEASE_NUM

      - name: üîç Run SQL Validation Tests
        run: |
          bash "$BASE_DIR/sqlunit/sql_validation_v1.sh" \
          --CLONE_DATABASE=$CLONE_DATABASE \
          --CLONE_SCHEMA=$CLONE_SCHEMA \
          --RELEASE_NUM=$RELEASE_NUM

      - name: üßπ Drop Cloned Schema After Tests
        run: |
          bash "$BASE_DIR/local-github-process/snowflake-drop-clone-db_v1.sh" \
          --CLONE_DATABASE=$CLONE_DATABASE \
          --CLONE_SCHEMA=$CLONE_SCHEMA \
          --RELEASE_NUM=$RELEASE_NUM

      - name: üì¶ Zip source files
        run: |
          zip -r release.zip . -x '*.git*' '*.scannerwork*'

      - name: üöÄ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.run_number }}
          tag_name: v${{ github.run_number }}
          files: release.zip
          token: ${{ secrets.GITHUB_TOKEN }}
